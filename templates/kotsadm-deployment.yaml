apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "admin-console.labels" . | nindent 4 }}
  name: kotsadm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kotsadm
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        backup.velero.io/backup-volumes: backup
        pre.hook.backup.velero.io/command: '["/scripts/backup.sh"]'
        pre.hook.backup.velero.io/timeout: 10m
      labels:
        app: kotsadm
        {{- include "admin-console.labels" . | nindent 8 }}
    spec:
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - env:
        - name: REPLICATED_APP_ENDPOINT
          value: {{ .Values.replicatedAppEndpoint | quote }}
        - name: REPLICATED_REGISTRY_DOMAIN
          value: {{ .Values.replicatedRegistryDomain | quote }}
        - name: PROXY_REGISTRY_DOMAIN
          value: {{ .Values.proxyRegistryDomain | quote }}
        {{- with .Values.extraEnv }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        - name: SHARED_PASSWORD_BCRYPT
          valueFrom:
            secretKeyRef:
{{- if .Values.passwordSecretRef }}
{{- with .Values.passwordSecretRef }}
              key: {{ .key }}
              name: {{ .name }}
        - name: SHARED_PASSWORD_SECRET_NAME
          value: {{ .name }}
        - name: SHARED_PASSWORD_SECRET_KEY
          value: {{ .key }}
{{- end }}
{{- else }}
              key: passwordBcrypt
              name: kotsadm-password
{{- end }} 
        - name: AUTO_CREATE_CLUSTER_TOKEN
          valueFrom:
            secretKeyRef:
              key: kotsadm-cluster-token
              name: kotsadm-cluster-token
        - name: SESSION_KEY
          valueFrom:
            secretKeyRef:
              key: key
              name: kotsadm-session
        - name: RQLITE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: kotsadm-rqlite
        - name: RQLITE_URI
          valueFrom:
            secretKeyRef:
              key: uri
              name: kotsadm-rqlite
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_OWNER_KIND
          value: deployment
        - name: API_ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              key: encryptionKey
              name: kotsadm-encryption
        - name: API_ENDPOINT
          value: http://kotsadm.{{ .Release.Namespace }}.svc.cluster.local:3000
        - name: API_ADVERTISE_ENDPOINT
          value: http://localhost:8800
{{- if .Values.embeddedClusterID }}
        - name: EMBEDDED_CLUSTER_ID
          value: {{ .Values.embeddedClusterID | quote }}
{{- end }}
{{- if .Values.embeddedClusterVersion }}
        - name: EMBEDDED_CLUSTER_VERSION
          value: {{ .Values.embeddedClusterVersion | quote }}
{{- end }}
{{- if .Values.embeddedClusterDataDir }}
        - name: EMBEDDED_CLUSTER_DATA_DIR
          value: {{ .Values.embeddedClusterDataDir | quote }}
{{- end }}
{{- if .Values.embeddedClusterK0sDir }}
        - name: EMBEDDED_CLUSTER_K0S_DIR
          value: {{ .Values.embeddedClusterK0sDir | quote }}
{{- end }}
{{- if .Values.isEmbeddedClusterV3 }}
        - name: IS_EMBEDDED_CLUSTER_V3
          value: "true"
{{- end }}
        - name: DISABLE_OUTBOUND_CONNECTIONS
          value: {{ .Values.isAirgap | quote }}
{{- if .Values.privateCAs.enabled }}
        - name: SSL_CERT_DIR
          value: /certs
        - name: SSL_CERT_CONFIGMAP
          value: "{{ .Values.privateCAs.configmapName }}"
{{- end }}
        image: {{ .Values.images.kotsadm }}
        imagePullPolicy: IfNotPresent
        name: kotsadm
        ports:
        - containerPort: 3000
          name: http
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 2
          periodSeconds: 2
        resources:
          limits:
            memory: 2Gi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - mountPath: /backup
          name: backup
        - mountPath: /tmp
          name: tmp
{{- if .Values.embeddedClusterDataDir }}
        - mountPath: {{ .Values.embeddedClusterDataDir }}
          name: embedded-cluster-data-dir
          readOnly: true
{{- end }}
{{- if .Values.embeddedClusterK0sDir }}
        - mountPath: {{ .Values.embeddedClusterK0sDir }}
          name: embedded-cluster-k0s-dir
          readOnly: true
{{- end }}
{{- if .Values.privateCAs.enabled }}
        - mountPath: /certs
          name: kotsadm-private-cas
{{- end }}
{{- if .Values.extraVolumeMounts }}
        {{- toYaml .Values.extraVolumeMounts | nindent 8 }}
{{- end }}
      initContainers:
      - args:
        - plan
        env:
        - name: SCHEMAHERO_DRIVER
          value: rqlite
        - name: SCHEMAHERO_SPEC_FILE
          value: /tables
        - name: SCHEMAHERO_OUT
          value: /migrations/plan.yaml
        - name: SCHEMAHERO_URI
          valueFrom:
            secretKeyRef:
              key: uri
              name: kotsadm-rqlite
        image: {{ .Values.images.migrations }}
        imagePullPolicy: IfNotPresent
        name: schemahero-plan
        resources:
          limits:
            memory: 100Mi
          requests:
            cpu: 50m
            memory: 50Mi
        volumeMounts:
        - mountPath: /migrations
          name: migrations
      - args:
        - apply
        env:
        - name: SCHEMAHERO_DRIVER
          value: rqlite
        - name: SCHEMAHERO_DDL
          value: /migrations/plan.yaml
        - name: SCHEMAHERO_URI
          valueFrom:
            secretKeyRef:
              key: uri
              name: kotsadm-rqlite
        image: {{ .Values.images.migrations }}
        imagePullPolicy: IfNotPresent
        name: schemahero-apply
        resources:
          limits:
            memory: 100Mi
          requests:
            cpu: 50m
            memory: 50Mi
        volumeMounts:
        - mountPath: /migrations
          name: migrations
      - command:
        - /scripts/restore-db.sh
        env:
        - name: RQLITE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: kotsadm-rqlite
        image: {{ .Values.images.kotsadm }}
        imagePullPolicy: IfNotPresent
        name: restore-db
        resources:
          limits:
            memory: 2Gi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - mountPath: /backup
          name: backup
        - mountPath: /tmp
          name: tmp
      restartPolicy: Always
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      serviceAccountName: kotsadm
      volumes:
      - emptyDir:
          medium: Memory
        name: migrations
      - emptyDir: {}
        name: backup
      - emptyDir: {}
        name: tmp
{{- if .Values.embeddedClusterDataDir }}
      - name: embedded-cluster-data-dir
        hostPath:
          path: {{ .Values.embeddedClusterDataDir }}
          type: Directory
{{- end }}
{{- if .Values.embeddedClusterK0sDir }}
      - name: embedded-cluster-k0s-dir
        hostPath:
          path: {{ .Values.embeddedClusterK0sDir }}
          type: Directory
{{- end }}
{{- if .Values.privateCAs.enabled }}
      - configMap:
          name: "{{ .Values.privateCAs.configmapName }}"
          optional: true
        name: kotsadm-private-cas
{{- end }}
{{- if .Values.extraVolumes }}
      {{- toYaml .Values.extraVolumes | nindent 6 }}
{{- end }}
